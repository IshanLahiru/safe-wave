"""002_content_management_system

Content management system with videos, articles, meal plans, quotes, and user progress tracking.

This migration adds:
- Content categories table
- Videos table for wellness videos
- Articles table for wellness articles
- Meal plans table for nutrition guidance
- Quotes table for inspirational content
- User favorites system
- User progress tracking
- Enhanced document processing capabilities

Revision ID: 002
Revises: 001
Create Date: 2025-09-03 01:35:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '002'
down_revision = '001'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Clean up orphaned data before adding foreign key constraints
    op.execute("DELETE FROM user_progress WHERE user_id NOT IN (SELECT id FROM users)")
    op.execute("DELETE FROM user_favorites WHERE user_id NOT IN (SELECT id FROM users)")

    op.add_column('blacklisted_tokens', sa.Column('blacklisted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('blacklisted_tokens', sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False))
    op.add_column('blacklisted_tokens', sa.Column('is_blacklisted', sa.Boolean(), nullable=True))
    op.drop_column('blacklisted_tokens', 'blacklisted_on')
    op.add_column('documents', sa.Column('content', sa.Text(), nullable=True))
    op.add_column('documents', sa.Column('transcription_status', sa.String(), nullable=True))
    op.add_column('documents', sa.Column('transcription_confidence', sa.Float(), nullable=True))
    op.add_column('documents', sa.Column('analysis_status', sa.String(), nullable=True))
    op.add_column('documents', sa.Column('risk_level', sa.String(), nullable=True))
    op.add_column('documents', sa.Column('mental_health_indicators', sa.JSON(), nullable=True))
    op.add_column('documents', sa.Column('summary', sa.Text(), nullable=True))
    op.add_column('documents', sa.Column('recommendations', sa.JSON(), nullable=True))
    op.add_column('documents', sa.Column('title', sa.String(), nullable=True))
    op.add_column('documents', sa.Column('category', sa.String(), nullable=True))
    op.add_column('documents', sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('documents', sa.Column('analyzed_at', sa.DateTime(timezone=True), nullable=True))
    op.create_foreign_key(None, 'user_favorites', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'user_progress', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_progress', type_='foreignkey')
    op.drop_constraint(None, 'user_favorites', type_='foreignkey')
    op.drop_column('documents', 'analyzed_at')
    op.drop_column('documents', 'processed_at')
    op.drop_column('documents', 'category')
    op.drop_column('documents', 'title')
    op.drop_column('documents', 'recommendations')
    op.drop_column('documents', 'summary')
    op.drop_column('documents', 'mental_health_indicators')
    op.drop_column('documents', 'risk_level')
    op.drop_column('documents', 'analysis_status')
    op.drop_column('documents', 'transcription_confidence')
    op.drop_column('documents', 'transcription_status')
    op.drop_column('documents', 'content')
    op.add_column('blacklisted_tokens', sa.Column('blacklisted_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('blacklisted_tokens', 'is_blacklisted')
    op.drop_column('blacklisted_tokens', 'expires_at')
    op.drop_column('blacklisted_tokens', 'blacklisted_at')
    # ### end Alembic commands ###
